---
- name: NETWORK AUTOMATION FOR CASE STUDY
  hosts: routers
  gather_facts: false
  
  vars:
    cli:
      username: cisco
      password: cisco123!
      timeout: 100
      auth_pass: cisco

  tasks:
   - name: APPLYING OSPF TO R1
     when: ansible_host == "23.0.2.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - router-id 0.0.0.1
         - network 23.0.2.0 0.0.0.3 area 0
         - network 23.0.2.8 0.0.0.3 area 0
         - default-information originate
       parents: router ospf 10

   - name: APPLYING OSPF TO R2
     when: ansible_host == "172.16.1.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - router-id 0.0.0.2
         - passive-interface f0/0
         - passive-interface f0/1
         - passive-interface f1/0
         - network 23.0.2.0 0.0.0.3 area 0
         - network 23.0.2.4 0.0.0.3 area 0
         - network 172.16.1.0 0.0.0.3 area 0
         - network 123.9.23.128 0.0.0.15 area 0
         - network 123.9.23.144 0.0.0.3 area 0
       parents: router ospf 10

   - name: APPLYING OSPF TO R3
     when: ansible_host == "23.0.2.6"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - router-id 0.0.0.3
         - passive-interface f0/0
         - passive-interface f0/1
         - network 23.0.2.8 0.0.0.3 area 0
         - network 23.0.2.4 0.0.0.3 area 0
         - network 123.9.23.0 0.0.0.63 area 0
         - network 123.9.23.64 0.0.0.63 area 0
       parents: router ospf 10

   - name: APPLYING ACCESS LIST FOR EMPLOYEES AREA RESTRICTIONS TO R2
     when: ansible_host == "172.16.1.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - deny 123.9.23.0 0.0.0.63
         - deny 123.9.23.64 0.0.0.63
         - permit any
       parents: ip access-list standard EMPLOYEES_RESTRICTIONS
   
   - name: APPLYING ACCESS GROUP FOR EMPLOYEES AREA ON f0/1 OF R2
     when: ansible_host == "172.16.1.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - int f0/1
         - ip access-group EMPLOYEES_RESTRICTIONS out

   - name: APPLYING ACCESS-LIST FOR THE PORT ADDRESS TRANSLATION ON R1
     when: ansible_host == "23.0.2.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines:
         - access-list 1 permit 123.9.23.0 0.0.0.15
         - access-list 2 permit 123.9.23.143 0.0.0.3
         - access-list 3 permit 172.16.1.0 0.0.0.3

   - name: APPLYING PORT ADDRESS TRANSLATION ON R1
     when: ansible_host == "23.0.2.1"
     ios_config:
       provider: "{{ cli }}"
       authorize: yes
       lines: 
         - ip nat pool CEO_POOL 200.220.10.1 200.220.10.2 netmask 255.255.255.252
         - ip nat pool MANAGER_POOL 200.220.20.1 200.220.20.2 netmask 255.255.255.252
         - ip nat pool ADMIN_POOL 200.220.30.1 200.220.30.2 netmask 255.255.255.252
         - ip nat inside source list 1 pool CEO_POOL overload
         - ip nat inside source list 2 pool MANAGER_POOL overload
         - ip nat inside source list 3 pool ADMIN_POOL overload

   - name: DISPLAYING THE RUNNING-CONFIG FOR R1
     when: ansible_host == "23.0.2.1"
     ios_command:
       provider: "{{ cli }}"
       authorize: yes
       commands:
         - show run
         - wr
     register: config

   - name: SAVE OUTPUT TO ./configurations/ for R1
     when: ansible_host == "23.0.2.1"
     copy:
       content: "{{ config.stdout[0] }}"
       dest: "configurations/R1_Config.txt"

   - name: DISPLAYING THE RUNNING-CONFIG FOR R2
     when: ansible_host == "172.16.1.1"
     ios_command:
       provider: "{{ cli }}"
       authorize: yes
       commands:
         - show run
         - wr
     register: config

   - name: SAVE OUTPUT TO ./configurations/ for R2
     when: ansible_host == "172.16.1.1"
     copy:
       content: "{{ config.stdout[0] }}"
       dest: "configurations/R2_Config.txt"

   - name: DISPLAYING THE RUNNING-CONFIG FOR R3
     when: ansible_host == "23.0.2.6"
     ios_command:
       provider: "{{ cli }}"
       authorize: yes
       commands:
         - show run
         - wr
     register: config

   - name: SAVE OUTPUT TO ./configurations/ for R3
     when: ansible_host == "23.0.2.6"
     copy:
       content: "{{ config.stdout[0] }}"
       dest: "configurations/R3_Config.txt"